{"version":3,"file":"static/js/682.efb710c9.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/spinner/Spinner.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './comicsList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst ComicsList = () => {\n    const {loading, error, getAllComics} = useMarvelService();\n    const [comics, setComics] = useState([]);\n    const [offset, setOffset] = useState(436);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsLoaded)\n    }\n\n    const onComicsLoaded = (newComics) => {\n        setComics(comics => [...comics, ...newComics]);\n        setOffset(offset + 8);\n        setNewItemLoading(false);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, index) => {\n            return (\n                <li key={index} className=\"comics__item\">\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.name}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const errorMessage = error && !items ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n    const items = renderItems(comics);\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button onClick={() => onRequest(offset)} disabled={newItemLoading} className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\"\r\nimport ComicsList from \"../comicsList/ComicsList\"\r\n\r\nconst ComicsPage = () => {\r\n    \r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with our comics\"/>\r\n                <title>Comics</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError } = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=40e875820323d71cfb44b782b2566361';\r\n    const _baseOffset = 300;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url, \r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`)\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0])\r\n    }\r\n\r\n    const _transformComics = (e) => {\r\n        return {\r\n            id: e.id,\r\n            thumbnail: `${e.thumbnail.path}.${e.thumbnail.extension}`,\r\n            name: e.title,\r\n            price: e.prices[0].price\r\n\t\t\t\t? `${e.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n            description: e.description || 'There is no description for this character',\r\n            pageCount: e.pageCount\r\n\t\t\t\t? `${e.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n            language: e.textObjects[0]?.language || \"en-us\",\r\n\r\n        }\r\n    } \r\n\r\n    return {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n        getCharacterByName,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t};\r\n}\r\n\r\nexport default useMarvelService;"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","ComicsList","loading","error","getAllComics","useMarvelService","comics","setComics","useState","offset","setOffset","newItemLoading","setNewItemLoading","useEffect","onRequest","initial","then","onComicsLoaded","newComics","errorMessage","items","spinner","Spinner","arr","map","item","index","Link","to","concat","id","thumbnail","name","price","renderItems","onClick","disabled","ComicsPage","_Fragment","Helmet","content","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","request","clearError","useHttp","setLoading","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","description","slice","path","extension","homepage","urls","wiki","_transformComics","_e$textObjects$","title","prices","pageCount","language","textObjects","getAllCharacters","results","getCharacterByName","getCharacter","res","getComic"],"sourceRoot":""}