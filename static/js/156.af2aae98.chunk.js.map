{"version":3,"file":"static/js/156.af2aae98.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/pages/SinglePage.js","components/spinner/Spinner.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n        const {id} = useParams();\r\n        const [data, setData] = useState(null);\r\n        const {loading, error, getComic, getCharacter, clearError} = useMarvelService();\r\n\r\n        useEffect(() => {\r\n            updateData()\r\n        }, [id])\r\n\r\n        const updateData = () => {\r\n            clearError();\r\n\r\n            switch (dataType) {\r\n                case 'comic':\r\n                    getComic(id).then(onDataLoaded);\r\n                    break;\r\n                case 'character':\r\n                    getCharacter(id).then(onDataLoaded);\r\n            }\r\n        }\r\n\r\n        function onDataLoaded(data) {\r\n        setData(data);\r\n    }\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error || !data) ? <Component data={data}/> : null;\r\n\r\n        return (\r\n            <>\r\n                <AppBanner/>\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SinglePage;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError } = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=40e875820323d71cfb44b782b2566361';\r\n    const _baseOffset = 300;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0])\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url, \r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`)\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0])\r\n    }\r\n\r\n    const _transformComics = (e) => {\r\n        return {\r\n            id: e.id,\r\n            thumbnail: `${e.thumbnail.path}.${e.thumbnail.extension}`,\r\n            name: e.title,\r\n            price: e.prices[0].price\r\n\t\t\t\t? `${e.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n            description: e.description || 'There is no description for this character',\r\n            pageCount: e.pageCount\r\n\t\t\t\t? `${e.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n            language: e.textObjects[0]?.language || \"en-us\",\r\n\r\n        }\r\n    } \r\n\r\n    return {\r\n\t\tloading,\r\n\t\terror,\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n        getCharacterByName,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t};\r\n}\r\n\r\nexport default useMarvelService;"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","_ref","Component","dataType","id","useParams","data","setData","useState","loading","error","getComic","getCharacter","clearError","useMarvelService","useEffect","updateData","then","onDataLoaded","errorMessage","spinner","Spinner","content","_Fragment","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","request","useHttp","setLoading","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","json","e","message","_apiBase","_apiKey","_transformCharacter","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","_e$textObjects$","title","price","prices","pageCount","language","textObjects","getAllCharacters","offset","results","map","getCharacterByName","res","getAllComics"],"sourceRoot":""}